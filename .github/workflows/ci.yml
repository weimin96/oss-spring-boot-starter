name: Java CI

on:
  push:
    paths:
      - '.github/**'
      - '**/*src/**/*.java'
      - 'pom.xml'

jobs:
  build:
    #	配置权限
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      # 下载代码
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        # 安装 JDK
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      # 配置 settings.xml 一般用于 Mavne 私库验证等
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: ''
          servers: ''
      - name: Report Coverage to Coveralls for Pull Requests
        if: github.event_name == 'pull_request'
        run: mvn clean test jacoco:report coveralls:report -Dlicense.skip=true -DrepoToken=$GITHUB_TOKEN -DserviceName=github -DpullRequest=$PR_NUMBER -B package --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
      - name: Report Coverage to Coveralls for General Push
        if: github.event_name == 'push'
        run: mvn clean test jacoco:report coveralls:report -Dlicense.skip=true -DrepoToken=$GITHUB_TOKEN -DserviceName=github -B package --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      # 监听版本变化
      - name: Check if version changed
        id: version_changed
        run: |
          git fetch --tags
          if [ "$(git diff HEAD^ HEAD pom.xml | grep '<version>' | wc -l)" -eq "0" ]; then
            echo "::set-output name=version_changed::false"
          else
            echo "::set-output name=version_changed::true"
          fi
      # 将打包好的 Jar 包 放到 staging 文件夹
      - run: mkdir staging && cp target/*.jar staging
      # 监听版本变化
      - name: Check if version changed
        id: version_changed
        run: |
          RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          LAST_VERSION=$(git describe --tags --abbrev=0)
          if [ "$RELEASE_VERSION" = "$LAST_VERSION" ]; then
            echo "version_changed=false" >> $GITHUB_ENV
          else
            echo "version_changed=true" >> $GITHUB_ENV
          fi
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "LAST_VERSION=$LAST_VERSION" >> $GITHUB_ENV
      # 上传文件并发布 Release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.RELEASE_TOKEN }}"
          automatic_release_tag: "${{ env.RELEASE_VERSION }}"
          prerelease: false
          title: "v${{ env.RELEASE_VERSION }}"
          files: |
            !staging/*javadoc.jar
            !staging/*sources.jar
            staging/*.jar
        if: steps.version_changed.outputs.version_changed == 'true'